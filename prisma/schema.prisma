// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id         String @id @default(uuid())
  name       String @db.VarChar(100)
  image      String
  price      Int
  categoryId String

  category            category              @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  order_product_table order_product_table[]
}

model order {
  id         String @id @default(uuid())
  customerId String @map("customer_id")

  customer            customer              @relation(fields: [customerId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  order_product_table order_product_table[]
}

model order_product_table {
  orderId   String
  productId String
  amount    Int

  order   order   @relation(fields: [orderId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  product product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: SetNull)

  createdAt DateTime @default(now())

  @@id([orderId, productId])
}

model user {
  id       String @id @default(uuid())
  email    String @db.VarChar(100)
  password String @db.VarChar(255)

  customer customer?
}

model customer {
  id       String @id @default(uuid())
  name     String @db.VarChar(100)
  lastName String @map("last_name") @db.VarChar(100)
  userId   String @map("user_id")
  user     user   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  order order[]
  @@unique([userId])
}

model category {
  id   String @id @default(uuid())
  name String @db.VarChar(200)

  product product[]
}
